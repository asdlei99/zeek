# Copyright (c) 2022 by the Zeek Project. See LICENSE for details.

module Syslog;

import zeek;

public type Message = unit {
    switch {
        -> prio: Priority;
        -> void;
    };

    msg: bytes &eod;

    on %done {
        zeek::confirm_protocol();

        if ( self?.prio ) {
            self.severity = (self.prio.value & 0x07);
            self.facility = (self.prio.value & 0x03f8) >> 3;
        }
    }

    on %error { zeek::reject_protocol("cannot parse message"); }

    var severity: uint64 = 999; # default per legacy analyzer
    var facility: uint64 = 999; # default per legacy analyzer
};

type Priority = unit {
    : b"<";
    value: /[[:digit:]]+/ &convert=$$.to_uint();
    : b">";
};
